name: UI Pull Request Merged
run-name: Deploy UI
on:
  pull_request:
    types:
      - closed
    branches:
      - main
    paths:
      - "ui/**"
jobs:
  image:
    name: Build image
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ github.token }}
      TF_IN_AUTOMATION: true
      TF_VERSION: "1.8.3"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          aws-access-key-id: ${{ secrets.CICD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CICD_AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.CICD_ROLE_ARN }}
          role-skip-session-tagging: true
          role-duration-seconds: 1200

      - name: Setup kubectl access
        run: |
          aws eks update-kubeconfig --name manifold 
          kubectl config current-context

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        id: init
        working-directory: terraform/deployments/demo
        run: terraform init

      - name: Post TF Init
        if: ${{ always() && (steps.init.outcome == 'success' || steps.init.outcome == 'failure') }}
        uses: GetTerminus/terraform-pr-commenter@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          commenter_type: init
          commenter_input: ${{ format('{0}{1}', steps.init.outputs.stdout, steps.init.outputs.stderr) }}
          commenter_exitcode: ${{ steps.init.outputs.exitcode }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: NPM Install
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ui

      - name: NPM Build
        working-directory: ui
        run: |
          npm run build-prod

      - name: Terraform Apply
        id: apply
        working-directory: terraform/deployments/demo
        run: terraform apply -auto-approve